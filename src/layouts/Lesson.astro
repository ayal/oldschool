---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'lesson'>['data'];

const { title, videos } = Astro.props;

---

<html lang="en">
<head>
    <Header />
    <BaseHead title={title} description={title} />
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f9f9f9;
            color: #333;
        }

        header {
            background-color: #fff;
            padding: 20px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }

        header h1 {
            margin: 0;
            font-size: 24px;
        }

        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            background: #fff;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .video-section {
            margin-bottom: 20px;
            text-align: center;
        }

        .video-section video {
            width: 100%;
            max-width: 800px;
            border: 1px solid #ddd;
        }

        .navigation {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
        }

        .navigation a {
            padding: 10px 20px;
            background: #0073e6;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
        }

        .navigation a:hover {
            background: #005bb5;
        }

        .content {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }

        .videos, .talk {
            flex: 1;
            min-width: 300px;
        }

        .videos h2, .talk h2 {
            font-size: 18px;
            margin-bottom: 15px;
        }

        .videos ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .videos ul li {
            padding: 10px;
            background: #f7f7f7;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }

        .videos ul li span {
            font-size: 14px;
            color: #666;
        }

        .talk textarea {
            width: 100%;
            height: 100px;
            margin-bottom: 10px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
        }

        .talk button {
            background: #0073e6;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
        }

        .talk button:hover {
            background: #005bb5;
        }
    </style>
</head>
<body>

<header>
    <h1>{title}</h1>
</header>

<div class="container">
    <div class="video-section">
        <video id="mainVideo" controls>
            <source id="videoSource" type="video/mp4">
            Your browser does not support the video tag.
        </video>
    </div>

    <div class="navigation">
        <a href="#" id="backButton">&laquo; Back</a>
        <a href="#" id="nextButton">Next &raquo;</a>
    </div>

    <div class="content">

        <div class="videos">
            <h2>The Videos:</h2>
            <ul id="videoList">
                {
                    videos?.map((video, index) => (
                        <li data-video={index} data-url={`https://ayal.github.io/nuski/videos/${encodeURIComponent(video.url)}`}>
                            <span>{video.title}</span>
                        </li>
                    ))
                }
            </ul>
        </div>

    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const videoSource = document.getElementById('videoSource');
        const mainVideo = document.getElementById('mainVideo');
        const videoItems = document.querySelectorAll('#videoList li');
        const backButton = document.getElementById('backButton');
        const nextButton = document.getElementById('nextButton');

        let currentVideoIndex = 0;

        function loadVideo(index) {
            const videoUrl = videoItems[index].getAttribute('data-url');
            if (videoUrl) {
                videoSource.setAttribute('src', videoUrl);
                mainVideo.load();
                 mainVideo.play();
            }
        }

        if (videoSource && mainVideo) {
            videoItems.forEach((item, index) => {
                item.addEventListener('click', () => {
                    currentVideoIndex = index;
                    loadVideo(currentVideoIndex);
                });
            });

            backButton.addEventListener('click', (e) => {
                e.preventDefault();
                if (currentVideoIndex > 0) {
                    currentVideoIndex--;
                    loadVideo(currentVideoIndex);
                }
            });

            nextButton.addEventListener('click', (e) => {
                e.preventDefault();
                if (currentVideoIndex < videoItems.length - 1) {
                    currentVideoIndex++;
                    loadVideo(currentVideoIndex);
                }
            });
        }
    });
</script>

</body>
</html>
